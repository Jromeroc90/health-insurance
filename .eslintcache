[{"/home/maq/projects/health-insurance/src/index.tsx":"1","/home/maq/projects/health-insurance/src/reportWebVitals.ts":"2","/home/maq/projects/health-insurance/src/App.tsx":"3","/home/maq/projects/health-insurance/src/containers/Router.tsx":"4","/home/maq/projects/health-insurance/src/containers/Home/index.tsx":"5","/home/maq/projects/health-insurance/src/components/organisms/index.ts":"6","/home/maq/projects/health-insurance/src/components/organisms/Layout/index.tsx":"7","/home/maq/projects/health-insurance/src/components/atoms/index.ts":"8","/home/maq/projects/health-insurance/src/components/atoms/Input/index.tsx":"9","/home/maq/projects/health-insurance/src/components/molecules/index.ts":"10","/home/maq/projects/health-insurance/src/components/molecules/SelectWithInput/index.tsx":"11","/home/maq/projects/health-insurance/src/components/atoms/Button/index.tsx":"12","/home/maq/projects/health-insurance/src/components/atoms/Checkbox/index.tsx":"13","/home/maq/projects/health-insurance/src/util/functions.ts":"14","/home/maq/projects/health-insurance/src/components/atoms/Message/index.tsx":"15","/home/maq/projects/health-insurance/src/containers/Data/index.tsx":"16","/home/maq/projects/health-insurance/src/components/atoms/Radio/index.tsx":"17","/home/maq/projects/health-insurance/src/components/molecules/FamilyRow/index.tsx":"18","/home/maq/projects/health-insurance/src/containers/Plans/index.tsx":"19","/home/maq/projects/health-insurance/src/components/molecules/PlanBox/index.tsx":"20","/home/maq/projects/health-insurance/src/components/atoms/Dropdown/index.tsx":"21","/home/maq/projects/health-insurance/src/components/molecules/PriceRow/index.tsx":"22","/home/maq/projects/health-insurance/src/components/organisms/PlanCard/index.tsx":"23","/home/maq/projects/health-insurance/src/containers/Thanks/index.tsx":"24","/home/maq/projects/health-insurance/src/components/organisms/LayoutSmall/index.tsx":"25"},{"size":500,"mtime":1610827060206,"results":"26","hashOfConfig":"27"},{"size":425,"mtime":1610817669286,"results":"28","hashOfConfig":"27"},{"size":165,"mtime":1610824575494,"results":"29","hashOfConfig":"27"},{"size":543,"mtime":1611276127064,"results":"30","hashOfConfig":"27"},{"size":5491,"mtime":1611281283797,"results":"31","hashOfConfig":"27"},{"size":149,"mtime":1611277106849,"results":"32","hashOfConfig":"27"},{"size":2081,"mtime":1611280676735,"results":"33","hashOfConfig":"27"},{"size":254,"mtime":1611269846831,"results":"34","hashOfConfig":"27"},{"size":919,"mtime":1611247198095,"results":"35","hashOfConfig":"27"},{"size":212,"mtime":1611270162294,"results":"36","hashOfConfig":"27"},{"size":1282,"mtime":1611257945561,"results":"37","hashOfConfig":"27"},{"size":479,"mtime":1611192543729,"results":"38","hashOfConfig":"27"},{"size":497,"mtime":1611247350483,"results":"39","hashOfConfig":"27"},{"size":561,"mtime":1611245716803,"results":"40","hashOfConfig":"27"},{"size":185,"mtime":1611246600079,"results":"41","hashOfConfig":"27"},{"size":10024,"mtime":1611281283789,"results":"42","hashOfConfig":"27"},{"size":558,"mtime":1611251748505,"results":"43","hashOfConfig":"27"},{"size":524,"mtime":1611256485265,"results":"44","hashOfConfig":"27"},{"size":6815,"mtime":1611278218418,"results":"45","hashOfConfig":"27"},{"size":692,"mtime":1611268600576,"results":"46","hashOfConfig":"27"},{"size":268,"mtime":1611269879402,"results":"47","hashOfConfig":"27"},{"size":331,"mtime":1611270162302,"results":"48","hashOfConfig":"27"},{"size":2551,"mtime":1611281200341,"results":"49","hashOfConfig":"27"},{"size":1092,"mtime":1611278218410,"results":"50","hashOfConfig":"27"},{"size":695,"mtime":1611278056447,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"jjw1vz",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/maq/projects/health-insurance/src/index.tsx",[],["105","106"],"/home/maq/projects/health-insurance/src/reportWebVitals.ts",[],"/home/maq/projects/health-insurance/src/App.tsx",[],"/home/maq/projects/health-insurance/src/containers/Router.tsx",[],"/home/maq/projects/health-insurance/src/containers/Home/index.tsx",[],"/home/maq/projects/health-insurance/src/components/organisms/index.ts",[],"/home/maq/projects/health-insurance/src/components/organisms/Layout/index.tsx",[],"/home/maq/projects/health-insurance/src/components/atoms/index.ts",[],"/home/maq/projects/health-insurance/src/components/atoms/Input/index.tsx",[],"/home/maq/projects/health-insurance/src/components/molecules/index.ts",[],"/home/maq/projects/health-insurance/src/components/molecules/SelectWithInput/index.tsx",[],"/home/maq/projects/health-insurance/src/components/atoms/Button/index.tsx",[],"/home/maq/projects/health-insurance/src/components/atoms/Checkbox/index.tsx",[],"/home/maq/projects/health-insurance/src/util/functions.ts",[],"/home/maq/projects/health-insurance/src/components/atoms/Message/index.tsx",[],"/home/maq/projects/health-insurance/src/containers/Data/index.tsx",["107"],"import React, { useState, useEffect } from 'react';\nimport { useLocation, useHistory, Redirect } from 'react-router-dom';\nimport { Button, Input, Radio, Message } from '../../components/atoms';\nimport { SelectWithInput, FamilyRow } from '../../components/molecules';\nimport { SmallLayout } from '../../components/organisms';\nimport { dateValidation, documentValidation } from '../../util/functions';\nimport Back from '../../assets/images/icons/back.png';\nimport './styles.scss';\n\ntype StateType = {\n  new: boolean;\n  document_type?: string;\n  document_number?: string;\n  name?: string;\n  last_name?: string;\n  maternal_name?: string;\n  birthday?: string;\n  genre?: string;\n}\n\ntype RelationType = {\n  id: number,\n  relation: string,\n  birthday: string;\n}\n\nconst documentOptions = [\n  {\n    value: 'dni',\n    label: 'DNI',\n  },\n  {\n    value: 'ce',\n    label: 'C.E.',\n  }\n]\n\nconst options = [\n  {\n    value: 'partner',\n    label: 'CÃ³nyugue',\n  },\n  {\n    value: 'child',\n    label: 'Hijo',\n  },\n];\n\nconst Data: React.FC = () => {\n  const history = useHistory();\n  const { state } = useLocation<StateType>();\n  const [disabled, setDisabled] = useState<boolean>(true);\n  const [form, setForm] = useState({\n    name: state.name || '',\n    last_name: state.last_name || '',\n    maternal_name: state.maternal_name || '',\n    document_type: state.document_type || 'dni',\n    document_number: state.document_number || '',\n    birthday: state.birthday || '',\n    genre: state.genre || '',\n    insurance: '',\n  });\n  const [errors, setErrors] = useState({\n    document_number: false,\n    birthday: false,\n  });\n  const [famForm, setFamForm] = useState({\n    relation: 'partner',\n    birthday: '',\n  });\n  const [index, setIndex] = useState<number>(1);\n  const [famFormError, setFamFormError] = useState<boolean>(false);\n  const [relations, setRelations] = useState<Array<RelationType>>([]);\n\n  useEffect(() => {\n    if (state.new) {\n      if (\n        (form.name && form.insurance && form.insurance !== 'family')\n        || (form.name && form.insurance && form.insurance === 'family' && relations.length > 0)\n      ) {\n        setDisabled(false);\n      } else {\n        setDisabled(true);\n      }\n    } else {\n      // @ts-ignore\n      const every = Object.keys(form).every(key => form[key]);\n      if (\n        (every && form.insurance !== 'family')\n        || (every && form.insurance === 'family' && relations.length > 0)\n      ) {\n        setDisabled(false);\n      } else {\n        setDisabled(true);\n      }\n    }\n  }, [form, relations]);\n\n  const handleAddRelation = () => {\n    let isValid = true;\n\n    if (!dateValidation(famForm.birthday)) {\n      setFamFormError(true);\n      isValid = false;\n    }\n\n    if (!isValid) {\n      return;\n    }\n\n    const aux = [\n      ...relations,\n      {\n        id: index,\n        relation: famForm.relation,\n        birthday: famForm.birthday,\n      },\n    ];\n\n    setFamFormError(false);\n    setRelations(aux);\n    setIndex(index + 1);\n  }\n\n  const handleDeleteRelation = (id: number) => {\n    const aux = relations.filter(relation => relation.id !== id);\n    setRelations(aux);\n  }\n\n  const handleContinue = () => {\n    let isValid = true;\n\n    const validation = {\n      document_number: false,\n      birthday: false,\n    }\n\n    if (!state.new) {\n      if (!dateValidation(form.birthday)) {\n        validation.birthday = true;\n        isValid = false;\n      }\n\n      if (!documentValidation(form.document_number, form.document_type)) {\n        validation.document_number = true;\n        isValid = false;\n      }\n    }\n\n    setErrors(validation);\n\n    if (!isValid) {\n      return;\n    }\n\n    history.push('/planes', {\n      relations,\n    });\n  }\n\n  if (!state) {\n    return <Redirect to='/' />;\n  }\n\n  return (\n    <SmallLayout>\n      <div className='data_form'>\n        <div className='data_form_navigate'>\n          <img\n            src={Back}\n            alt='back_button'\n            onClick={() => history.replace('/')}\n          />\n          <p><span>PASO 1</span> DE 7</p>\n        </div>\n        <div className='data_form_title'>\n          {state.new ? (\n            <>\n              <h2>Hola, <span>Â¡empecemos!</span></h2>\n              <p className=''>Cuentanos un poco sobre ti</p>\n            </>\n          ) : (\n            <>\n              <h2>Hola, <span>{state.name}</span></h2>\n              <p className=''>Valida que los datos sean correctos.</p>\n            </>\n          )}\n        </div>\n\n        <p className='input_label'>\n          {state.new\n            ? 'Ingresa tu nombre'\n            : 'Datos personales del titular'\n          }\n        </p>\n\n        {state.new ? (\n          <Input\n            value={form.name}\n            label='Nombre y apellido'\n            onChange={text => setForm({\n              ...form,\n              name: text,\n            })}\n            margin='0 0 32px'\n          />\n        ) : (\n          <>\n            <SelectWithInput\n              selectOptions={documentOptions}\n              selectValue={form.document_type}\n              inputValue={form.document_number}\n              inputLabel='Nro. de documento'\n              onInputChange={text => setForm({\n                ...form,\n                document_number: text,\n              })}\n              onSelectChange={value => setForm({\n                ...form,\n                document_type: value,\n              })}\n              maxLength={form.document_type === 'dni' ? 8 : 12}\n              error={errors.document_number}\n            />\n\n            {errors.document_number && (\n              <Message>{`Tu nÃºmero de ${form.document_type.toUpperCase()} es invÃ¡lido`}</Message>\n            )}\n\n            <Input\n              value={form.name}\n              label='Nombres'\n              onChange={text => setForm({\n                ...form,\n                name: text,\n              })}\n              margin='16px 0 0'\n            />\n\n            <Input\n              value={form.last_name}\n              label='Apellido Paterno'\n              onChange={text => setForm({\n                ...form,\n                last_name: text,\n              })}\n              margin='16px 0 0'\n            />\n\n            <Input\n              value={form.maternal_name}\n              label='Apellido Materno'\n              onChange={text => setForm({\n                ...form,\n                maternal_name: text,\n              })}\n              margin='16px 0 0'\n            />\n\n            <Input\n              value={form.birthday}\n              label='Fecha de nacimiento'\n              onChange={text => setForm({\n                ...form,\n                birthday: text,\n              })}\n              margin='16px 0 0'\n              error={errors.birthday}\n            />\n\n            {errors.birthday && (\n              <Message>{`La fecha es invÃ¡lida. Use el formato DD/MM/AAAA.`}</Message>\n            )}\n\n            <p className='input_label small'>GÃ©nero</p>\n\n            <Radio\n              name='genre'\n              value='m'\n              checked={form.genre === 'm'}\n              label='Masculino'\n              onChange={value => setForm({\n                ...form,\n                genre: value,\n              })}\n              margin='0 0 16px'\n            />\n            <Radio\n              name='genre'\n              value='f'\n              checked={form.genre === 'f'}\n              label='Femenino'\n              onChange={value => setForm({\n                ...form,\n                genre: value,\n              })}\n              margin='0 0 40px'\n            />\n          </>\n        )}\n\n        <p className='input_label'>Â¿A quiÃ©n vamos a asegurar?</p>\n\n        <Radio\n          name='insurance'\n          value='me'\n          checked={form.insurance === 'me'}\n          label='Solo a mÃ­'\n          onChange={value => setForm({\n            ...form,\n            insurance: value,\n          })}\n          margin='0 0 16px'\n        />\n        <Radio\n          name='insurance'\n          value='family'\n          checked={form.insurance === 'family'}\n          label='A mÃ­ y mi familia'\n          onChange={value => setForm({\n            ...form,\n            insurance: value,\n          })}\n          margin='0 0 40px'\n        />\n\n        {form.insurance === 'family' && (\n          <>\n            <p className='input_label'>Datos de tus familiares</p>\n\n            <div className='relation_form'>\n              <div className='relation_form_inputs'>\n                <SelectWithInput\n                  calendar\n                  selectOptions={options}\n                  selectValue={famForm.relation}\n                  onSelectChange={value => setFamForm({\n                    ...famForm,\n                    relation: value,\n                  })}\n                  inputValue={famForm.birthday}\n                  onInputChange={text => setFamForm({\n                    ...famForm,\n                    birthday: text,\n                  })}\n                  inputLabel='Fecha de nacimiento'\n                  error={famFormError}\n                />\n              </div>\n              <span\n                className='relation_form_button'\n                onClick={() => handleAddRelation()}\n              >\n                Agregar\n              </span>\n            </div>\n\n            {famFormError && (\n              <Message>{`La fecha es invÃ¡lida. Use el formato DD/MM/AAAA.`}</Message>\n            )}\n            <div>\n            {relations.map(relation => (\n              <FamilyRow\n                key={relation.id}\n                relation={relation.relation === 'partner' ? 'CÃ³nyugue' : 'Hijo'}\n                birthday={relation.birthday}\n                onDelete={() => handleDeleteRelation(relation.id)}\n              />\n            ))}\n            </div>\n          </>\n        )}\n\n        <div className='button_container'>\n          <Button\n            disabled={disabled}\n            onClick={() => handleContinue()}\n            label='CONTINUAR'\n          />\n        </div>\n      </div>\n    </SmallLayout>\n  )\n};\n\nexport default Data;","/home/maq/projects/health-insurance/src/components/atoms/Radio/index.tsx",[],"/home/maq/projects/health-insurance/src/components/molecules/FamilyRow/index.tsx",[],"/home/maq/projects/health-insurance/src/containers/Plans/index.tsx",["108"],"import React, { useState, useEffect } from 'react';\nimport { useLocation, useHistory, Redirect } from 'react-router-dom';\nimport { Dropdown, Button } from '../../components/atoms';\nimport { PlanBox, PriceRow } from '../../components/molecules';\nimport { Layout, PlanCard } from '../../components/organisms';\nimport Back from '../../assets/images/icons/back.png';\nimport Down from '../../assets/images/icons/down.png';\nimport Guy from '../../assets/images/tyc.png';\nimport DownRed from '../../assets/images/icons/down_red.png';\nimport './styles.scss';\n\ntype RelationType = {\n  id: number,\n  relation: string,\n  birthday: string;\n}\n\ntype StateType = {\n  relations: Array<RelationType>;\n};\n\nconst Plans: React.FC = () => {\n  const history = useHistory();\n  const {state} = useLocation<StateType>();\n\n  const [openServices, setOpenServices] = useState<boolean>(false);\n  const [openExclusions, setOpenExclusions] = useState<boolean>(false);\n  const [quantity, setQuantity] = useState<number>(0);\n  const [children, setChildren] = useState<number>(0);\n  const [partners, setPartners] = useState<number>(0);\n  const [plans, setPlans] = useState([\n    {\n      name: 'bÃ¡sico',\n      price: 0,\n      base: 0,\n    },\n    {\n      name: 'avanzado',\n      price: 0,\n      base: 0,\n    },\n    {\n      name: 'premium',\n      price: 0,\n      base: 0,\n    },\n    {\n      name: 'full',\n      price: 0,\n      base: 0,\n    },\n  ]);\n  const [selectedPlan, setSelectedPlan] = useState<string>('bÃ¡sico');\n  const [basePrice, setBasePrice] = useState<number>(40);\n  const [openDetail, setOpenDetail] = useState<boolean>(false);\n\n  useEffect(() => {\n    let children = 0;\n    let partners = 0;\n\n    state.relations.forEach(relation => {\n      if (relation.relation === 'partner') {\n        partners += 1;\n      } else if (relation.relation === 'child') {\n        children += 1;\n      }\n    });\n\n    setPlans([\n      {\n        name: 'bÃ¡sico',\n        price: (1 + partners) * 60 + (children) * 40,\n        base: 40,\n      },\n      {\n        name: 'avanzado',\n        price: (1 + partners) * 80 + (children) * 60,\n        base: 60,\n      },\n      {\n        name: 'premium',\n        price: (1 + partners) * 100 + (children) * 80,\n        base: 80,\n      },\n      {\n        name: 'full',\n        price: (1 + partners) * 120 + (children) * 100,\n        base: 100,\n      },\n    ]);\n    setQuantity(1 + partners + children);\n    setPartners(partners);\n    setChildren(children);\n  }, [state]);\n\n  const handleBuy = () => {\n    history.push('/gracias', {\n      link: true,\n    });\n  }\n\n  if (!state) {\n    return <Redirect to='/'/>;\n  }\n\n  return (\n    <Layout>\n      <div className='plan_form'>\n        <div className='plan_form_navigate'>\n          <img\n            src={Back}\n            alt='back_button'\n            onClick={() => history.replace('/data')}\n          />\n          <p><span>PASO 2</span> DE 7</p>\n        </div>\n\n        <div className='plan_form_title'>\n          <h2>Elige <span>tu protecciÃ³n</span></h2>\n          <p className=''>Selecciona un plan de salud ideal.</p>\n        </div>\n\n        <div className='plan_form_wrapper'>\n          {plans.map(plan => (\n            <PlanBox\n              key={plan.name}\n              selected={plan.name === selectedPlan}\n              name={plan.name}\n              price={plan.price}\n              onClick={() => {\n                setSelectedPlan(plan.name);\n                setBasePrice(plan.base);\n              }}\n            />\n          ))}\n        </div>\n\n        <div className='plan_form_summary'>\n          <p>{`Tienes (${quantity}) asegurados`}</p>\n          <div onClick={() => setOpenDetail(!openDetail)}>\n            <span>RESUMEN DEL PLAN</span>\n            <img src={Down} alt='drop'/>\n          </div>\n        </div>\n\n        <Dropdown open={openDetail}>\n          <PriceRow\n            label='Titular'\n            price={basePrice + 20}\n          />\n          {state.relations && state.relations.map(relation => (\n            <PriceRow\n              key={relation.id}\n              label={relation.relation === 'child' ? 'Hijo' : 'CÃ³nyugue'}\n              price={relation.relation === 'child' ? basePrice : basePrice + 20}\n            />\n          ))}\n\n          <div className='plan_form_total'>\n            <p>PAGO TOTAL MENSUAL</p>\n            <span>{`S/ ${((1 + partners) * (basePrice + 20)) + (children * basePrice)}`}</span>\n          </div>\n        </Dropdown>\n\n        <PlanCard plan={selectedPlan}/>\n\n        <div className='plan_form_tyc'>\n          <div className='plan_form_tyc-title'>\n            <h2>Revisa nuestros<br/><span>servicios y exclusiones</span></h2>\n            <img src={Guy} alt='image'/>\n          </div>\n\n          <div\n            className='plan_form_tyc-item'\n            onClick={() => setOpenServices(!openServices)}\n          >\n            <h2>Servicios brindados</h2>\n            <img src={DownRed} alt='drop'/>\n          </div>\n\n          <Dropdown open={openServices}>\n            <div className='text'>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et\n              dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex\n              ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu\n              fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt\n              mollit anim id est laborum.\n            </div>\n          </Dropdown>\n\n          <div\n            className='plan_form_tyc-item'\n            onClick={() => setOpenExclusions(!openExclusions)}\n          >\n            <h2>Exclusiones</h2>\n            <img src={DownRed} alt='drop'/>\n          </div>\n\n          <Dropdown open={openExclusions}>\n            <div className='text'>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et\n              dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex\n              ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu\n              fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt\n              mollit anim id est laborum.\n            </div>\n          </Dropdown>\n        </div>\n\n        <div className='plan_form_buttons'>\n          <span className='send-button'>ENVIAR COTIZACIÃN POR CORREO</span>\n          <Button\n            disabled={!selectedPlan}\n            onClick={() => handleBuy()}\n            label='COMPRAR PLAN'\n            margin='0 0 0 20px'\n          />\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Plans;","/home/maq/projects/health-insurance/src/components/molecules/PlanBox/index.tsx",[],"/home/maq/projects/health-insurance/src/components/atoms/Dropdown/index.tsx",[],"/home/maq/projects/health-insurance/src/components/molecules/PriceRow/index.tsx",[],"/home/maq/projects/health-insurance/src/components/organisms/PlanCard/index.tsx",["109"],"/home/maq/projects/health-insurance/src/containers/Thanks/index.tsx",[],"/home/maq/projects/health-insurance/src/components/organisms/LayoutSmall/index.tsx",[],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":98,"column":6,"nodeType":"116","endLine":98,"endColumn":23,"suggestions":"117"},{"ruleId":"118","severity":1,"message":"119","line":170,"column":13,"nodeType":"120","endLine":170,"endColumn":41},{"ruleId":"121","severity":1,"message":"122","line":45,"column":3,"nodeType":"123","messageId":"124","endLine":48,"endColumn":4,"fix":"125"},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'state.new'. Either include it or remove the dependency array.","ArrayExpression",["128"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donât need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-useless-computed-key","Unnecessarily computed property ['bÃ¡sico'] found.","Property","unnecessarilyComputedProperty",{"range":"129","text":"130"},"no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},[790,800],"'bÃ¡sico'","Update the dependencies array to be: [form, relations, state.new]",{"range":"133","text":"134"},[2539,2556],"[form, relations, state.new]"]